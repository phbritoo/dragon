[{"C:\\dev\\desafio-dragon\\src\\index.js":"1","C:\\dev\\desafio-dragon\\src\\App.js":"2","C:\\dev\\desafio-dragon\\src\\store\\reducers\\dragon-list.js":"3","C:\\dev\\desafio-dragon\\src\\store\\reducers\\auth.js":"4","C:\\dev\\desafio-dragon\\src\\store\\reducers\\dragon.js":"5","C:\\dev\\desafio-dragon\\src\\components\\pages\\login\\login.js":"6","C:\\dev\\desafio-dragon\\src\\components\\pages\\edit-dragon\\editDragon.js":"7","C:\\dev\\desafio-dragon\\src\\components\\pages\\home\\home.js":"8","C:\\dev\\desafio-dragon\\src\\store\\actions\\actionTypes.js":"9","C:\\dev\\desafio-dragon\\src\\shared\\utility.js":"10","C:\\dev\\desafio-dragon\\src\\store\\actions\\index.js":"11","C:\\dev\\desafio-dragon\\src\\components\\pages\\add-dragon\\addDragon.js":"12","C:\\dev\\desafio-dragon\\src\\store\\actions\\auth.js":"13","C:\\dev\\desafio-dragon\\src\\store\\actions\\dragon-list.js":"14","C:\\dev\\desafio-dragon\\src\\store\\actions\\dragon.js":"15","C:\\dev\\desafio-dragon\\src\\history.js":"16","C:\\dev\\desafio-dragon\\src\\containers\\menu\\menu.js":"17","C:\\dev\\desafio-dragon\\src\\containers\\footer\\footer.js":"18"},{"size":1125,"mtime":1610948725995,"results":"19","hashOfConfig":"20"},{"size":1084,"mtime":1610917438031,"results":"21","hashOfConfig":"20"},{"size":1325,"mtime":1610951121484,"results":"22","hashOfConfig":"20"},{"size":674,"mtime":1610859895465,"results":"23","hashOfConfig":"20"},{"size":1741,"mtime":1610859068663,"results":"24","hashOfConfig":"20"},{"size":2997,"mtime":1610956497597,"results":"25","hashOfConfig":"20"},{"size":5216,"mtime":1610956447353,"results":"26","hashOfConfig":"20"},{"size":3777,"mtime":1610953984663,"results":"27","hashOfConfig":"20"},{"size":852,"mtime":1610859068539,"results":"28","hashOfConfig":"20"},{"size":406,"mtime":1610948423785,"results":"29","hashOfConfig":"20"},{"size":199,"mtime":1610859068557,"results":"30","hashOfConfig":"20"},{"size":2636,"mtime":1610921199647,"results":"31","hashOfConfig":"20"},{"size":565,"mtime":1610956528526,"results":"32","hashOfConfig":"20"},{"size":1032,"mtime":1610951110235,"results":"33","hashOfConfig":"20"},{"size":2580,"mtime":1610953602231,"results":"34","hashOfConfig":"20"},{"size":106,"mtime":1610878013356,"results":"35","hashOfConfig":"20"},{"size":1881,"mtime":1610956046247,"results":"36","hashOfConfig":"20"},{"size":585,"mtime":1610957313292,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pot5k3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\desafio-dragon\\src\\index.js",[],["76","77"],"C:\\dev\\desafio-dragon\\src\\App.js",[],"C:\\dev\\desafio-dragon\\src\\store\\reducers\\dragon-list.js",[],"C:\\dev\\desafio-dragon\\src\\store\\reducers\\auth.js",[],"C:\\dev\\desafio-dragon\\src\\store\\reducers\\dragon.js",[],"C:\\dev\\desafio-dragon\\src\\components\\pages\\login\\login.js",["78"],"C:\\dev\\desafio-dragon\\src\\components\\pages\\edit-dragon\\editDragon.js",["79","80"],"C:\\dev\\desafio-dragon\\src\\components\\pages\\home\\home.js",["81"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddDragon from \"../add-dragon/addDragon\";\nimport * as actions from \"../../../store/actions/\";\nimport { MDBBtn, MDBContainer, MDBCardTitle, MDBRow, MDBCol, MDBIcon, MDBCard, MDBCardBody, MDBCardText } from 'mdbreact';\nimport Menu from \"../../../containers/menu/menu\";\nimport FooterPage from \"../../../containers/footer/footer\";\n\nconst Home = props => {\n\n  const [isAddingNew, setIsAddingNew] = useState(false)\n\n  const onClickDragonHandler = event => {\n    props.history.push({ pathname: `/dragon/${event.id}`, state: event });\n  };\n\n  const formatDate = date => {\n    return new Date(date).toDateString();\n  };\n\n  const addDragonHandler = () => {\n    setIsAddingNew(!isAddingNew);\n  }\n  let list = <p>Loading</p>;\n  if (!props.loading) {\n    list = props.dragonsList.map(dragon => {\n      return (\n        <Fragment>\n          <MDBContainer key={dragon.id}>\n            <MDBRow center>\n              {/* <MDBCol md=\"0\" sm=\"6\"> */}\n              <MDBCard className=\"text-center m-3\" style={{ width: \"22rem\", cursor: \"pointer\", backgroundColor: \"#F5F5F5\" }} >\n                {/* <hr style={{ backgroundColor: \"purple\", height: 1 }} /> */}\n                <MDBCardBody onClick={onClickDragonHandler.bind(this, dragon)}>\n                  <img width=\"160rem\" src=\"https://i1.sndcdn.com/avatars-000339898322-9sq0en-t500x500.jpg\" className=\"rounded mx-auto d-block\" alt=\"dragao\" />\n                  <MDBCardText className='mt-4' style={{ color: \"#83508B\" }}>\n                    <MDBCardTitle><strong>{dragon.name}</strong></MDBCardTitle>\n                  </MDBCardText>\n                  <MDBCardText style={{ color: \"#83508B\" }} >\n                    <strong className=\"h6\">ID: </strong>\n                    <strong className=\"h6\">{dragon.id}</strong>\n                  </MDBCardText>\n                  <MDBCardText style={{ color: \"#83508B\" }} >\n                    <strong className=\"h6\">Tipo: </strong>\n                    <strong className=\"h6\">{dragon.type}</strong>\n                  </MDBCardText>\n                  <MDBCardText style={{ color: \"#83508B\" }} >\n                    <strong className=\"h6\">Data: </strong>\n                    <strong className=\"h6\">{formatDate(dragon.createdAt)}</strong>\n                  </MDBCardText>\n                </MDBCardBody>\n                {/* <hr style={{ backgroundColor: \"purple\", height: 1 }} /> */}\n              </MDBCard>\n              {/* </MDBCol> */}\n            </MDBRow>\n          </MDBContainer>\n        </Fragment>\n      )\n    });\n  }\n\n  return (\n    <Fragment>\n      <Menu></Menu>\n      <MDBRow className='d-flex justify-content-center' style={{ marginTop: \"30px\", cursor: \"pointer\" }} >\n        <MDBCol className='mb-3 mt-5'  >\n          <span onClick={addDragonHandler}>\n            <MDBBtn size=\"lg\" color=\"secondary\"  >\n              <MDBIcon icon=\"plus\" size=\"2x\" className=\"mr-2\" style={{}} />\n              <strong className=\"h5 text-center\">   Criar Drag√£o</strong>\n            </MDBBtn>\n          </span>\n        </MDBCol>\n      </MDBRow>\n      <div>\n        {isAddingNew && <AddDragon />}\n      </div>\n      <div>\n        {props.error && <p>{props.error}</p>}\n      </div>\n      {list}\n      <FooterPage></FooterPage>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    dragonsList: state.dragonList.dragons,\n    loading: state.dragonList.loading,\n    error: state.dragonList.error,\n    wasCreated: state.dragon.wasCreated,\n    wasUpdate: state.dragonList.wasUpdate\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetDragonsList: () => dispatch(actions.getDragonsList())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","C:\\dev\\desafio-dragon\\src\\store\\actions\\actionTypes.js",[],"C:\\dev\\desafio-dragon\\src\\shared\\utility.js",[],"C:\\dev\\desafio-dragon\\src\\store\\actions\\index.js",[],"C:\\dev\\desafio-dragon\\src\\components\\pages\\add-dragon\\addDragon.js",[],"C:\\dev\\desafio-dragon\\src\\store\\actions\\auth.js",[],"C:\\dev\\desafio-dragon\\src\\store\\actions\\dragon-list.js",[],"C:\\dev\\desafio-dragon\\src\\store\\actions\\dragon.js",[],"C:\\dev\\desafio-dragon\\src\\history.js",[],"C:\\dev\\desafio-dragon\\src\\containers\\menu\\menu.js",[],"C:\\dev\\desafio-dragon\\src\\containers\\footer\\footer.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":16,"column":6,"nodeType":"88","endLine":16,"endColumn":24,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":19,"column":6,"nodeType":"88","endLine":19,"endColumn":8,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"87","line":25,"column":6,"nodeType":"88","endLine":25,"endColumn":18,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array. If 'setDragonDetails' needs the current value of 'props.location.state', you can also switch to useReducer instead of useState and read 'props.location.state' in the reducer.",["100"],["101"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [props.history, props.isLoggedIn]",{"range":"108","text":"109"},"Update the dependencies array to be: [props.location.state]",{"range":"110","text":"111"},"Update the dependencies array to be: [props.history, wasDeleted]",{"range":"112","text":"113"},[483,501],"[props.history, props.isLoggedIn]",[618,620],"[props.location.state]",[707,719],"[props.history, wasDeleted]"]