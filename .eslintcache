[{"C:\\dev\\desafio-dragon\\src\\index.js":"1","C:\\dev\\desafio-dragon\\src\\App.js":"2","C:\\dev\\desafio-dragon\\src\\store\\reducers\\dragon-list.js":"3","C:\\dev\\desafio-dragon\\src\\store\\reducers\\auth.js":"4","C:\\dev\\desafio-dragon\\src\\store\\reducers\\dragon.js":"5","C:\\dev\\desafio-dragon\\src\\components\\pages\\login\\login.js":"6","C:\\dev\\desafio-dragon\\src\\components\\pages\\edit-dragon\\editDragon.js":"7","C:\\dev\\desafio-dragon\\src\\components\\pages\\home\\home.js":"8","C:\\dev\\desafio-dragon\\src\\store\\actions\\actionTypes.js":"9","C:\\dev\\desafio-dragon\\src\\shared\\utility.js":"10","C:\\dev\\desafio-dragon\\src\\store\\actions\\index.js":"11","C:\\dev\\desafio-dragon\\src\\components\\pages\\add-dragon\\addDragon.js":"12","C:\\dev\\desafio-dragon\\src\\store\\actions\\auth.js":"13","C:\\dev\\desafio-dragon\\src\\store\\actions\\dragon-list.js":"14","C:\\dev\\desafio-dragon\\src\\store\\actions\\dragon.js":"15","C:\\dev\\desafio-dragon\\src\\history.js":"16","C:\\dev\\desafio-dragon\\src\\containers\\menu\\menu.js":"17","C:\\dev\\desafio-dragon\\src\\containers\\footer\\footer.js":"18"},{"size":1125,"mtime":1610948725995,"results":"19","hashOfConfig":"20"},{"size":1084,"mtime":1610917438031,"results":"21","hashOfConfig":"20"},{"size":1325,"mtime":1610951121484,"results":"22","hashOfConfig":"20"},{"size":674,"mtime":1610859895465,"results":"23","hashOfConfig":"20"},{"size":1741,"mtime":1610859068663,"results":"24","hashOfConfig":"20"},{"size":2932,"mtime":1611014353678,"results":"25","hashOfConfig":"20"},{"size":5505,"mtime":1611014526865,"results":"26","hashOfConfig":"20"},{"size":3741,"mtime":1611014335455,"results":"27","hashOfConfig":"20"},{"size":852,"mtime":1610859068539,"results":"28","hashOfConfig":"20"},{"size":406,"mtime":1610948423785,"results":"29","hashOfConfig":"20"},{"size":199,"mtime":1610859068557,"results":"30","hashOfConfig":"20"},{"size":2434,"mtime":1611013989060,"results":"31","hashOfConfig":"20"},{"size":558,"mtime":1611011090271,"results":"32","hashOfConfig":"20"},{"size":1032,"mtime":1610951110235,"results":"33","hashOfConfig":"20"},{"size":2580,"mtime":1610953602231,"results":"34","hashOfConfig":"20"},{"size":106,"mtime":1610878013356,"results":"35","hashOfConfig":"20"},{"size":1560,"mtime":1611010651175,"results":"36","hashOfConfig":"20"},{"size":566,"mtime":1611014360015,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pot5k3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\desafio-dragon\\src\\index.js",[],["76","77"],"C:\\dev\\desafio-dragon\\src\\App.js",[],"C:\\dev\\desafio-dragon\\src\\store\\reducers\\dragon-list.js",[],"C:\\dev\\desafio-dragon\\src\\store\\reducers\\auth.js",[],"C:\\dev\\desafio-dragon\\src\\store\\reducers\\dragon.js",[],"C:\\dev\\desafio-dragon\\src\\components\\pages\\login\\login.js",[],"C:\\dev\\desafio-dragon\\src\\components\\pages\\edit-dragon\\editDragon.js",["78","79"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../../store/actions/\";\nimport { MDBBtn, MDBRow, MDBIcon, MDBTooltip, MDBInput } from 'mdbreact';\nimport { history } from '../../../history'\nimport Menu from \"../../../containers/menu/menu\";\nimport FooterPage from \"../../../containers/footer/footer\";\n\nconst EditDragon = props => {\n  const [dragonDetails, setDragonDetails] = useState({});\n  const [isEdit, setIsEdit] = useState(false);\n  const [wasDeleted, setWasDeleted] = useState(false)\n\n\n  useEffect(() => {\n    setDragonDetails({\n      ...props.location.state\n    });\n    setWasDeleted(false)\n  }, []);\n\n  useEffect(() => {\n    if (wasDeleted) {\n      props.history.goBack();\n    }\n  }, [wasDeleted])\n\n\n  const formatDate = date => {\n    return new Date(date).toDateString();\n  };\n\n  const changeHandler = (event) => {\n    const { id, value } = event.target;\n    setDragonDetails({ ...dragonDetails, [id]: value });\n\n  };\n\n  const goBackHandler = () => {\n    history.push('/home')\n  };\n\n  const saveDragonHandler = () => {\n    props.saveDragon(dragonDetails);\n    setIsEdit(false);\n    alert('Alteração feita com sucesso!')\n    history.push('/home')\n  }\n\n  const deleteDragonHandler = () => {\n    props.deleteDragon(dragonDetails.id);\n    setWasDeleted(true);\n    alert(\"Dragão deletado com sucesso!\");\n    history.push('/home')\n  }\n  const editDragonHandler = () => {\n    setIsEdit(!isEdit);\n  };\n  const editMode = () => {\n    return (\n      <>\n        <Menu></Menu>\n        <MDBInput\n          type=\"text\"\n          id=\"name\"\n          label=\"Nome\"\n          value={dragonDetails.name}\n          containerClassName=\"flex-nowrap mb-3\"\n          onChange={changeHandler}\n          size=\"lg\"\n          outline\n          background\n        />\n        <MDBInput\n          type=\"text\"\n          id=\"type\"\n          label=\"Tipo\"\n          value={dragonDetails.type}\n          containerClassName=\"flex-nowrap mb-3\"\n          onChange={changeHandler}\n          size=\"lg\"\n          outline\n          background\n        />\n\n      </>\n    );\n  };\n  const viewMode = () => {\n    return (\n      <>\n        <Menu></Menu>\n        <MDBInput\n          label=\"ID do Dragão\"\n          hint={dragonDetails.id}\n          containerClassName=\"flex-nowrap mb-3\"\n          disabled\n          size=\"lg\"\n          type=\"text\"\n          outline\n          background\n\n        />\n        <MDBInput\n          label=\"Nome do Dragão\"\n          hint={dragonDetails.name}\n          containerClassName=\"flex-nowrap mb-3\"\n          disabled\n          size=\"lg\"\n          type=\"text\"\n          outline\n          background\n        />\n        <MDBInput\n          label=\"Tipo do Dragão\"\n          hint={dragonDetails.type}\n          containerClassName=\"flex-nowrap mb-3\"\n          disabled\n          size=\"lg\"\n          type=\"text\"\n          outline\n          background\n        />\n        <MDBInput\n          label=\"Data de Criação:\"\n          hint={formatDate(dragonDetails.createdAt)}\n          containerClassName=\"flex-nowrap mb-3\"\n          disabled\n          size=\"lg\"\n          type=\"text\"\n          outline\n          background\n        />\n      </>\n    );\n  };\n\n  const setDisplayMode = () => {\n    switch (isEdit) {\n      case true:\n        return editMode();\n      case false:\n        return viewMode();\n      default:\n        return viewMode();\n    }\n  };\n\n  return (\n    <div>\n      <Menu></Menu>\n      <img width=\"110rem\" style={{ marginTop: \"80px\" }} src=\"https://i1.sndcdn.com/avatars-000339898322-9sq0en-t500x500.jpg\" className=\"rounded mx-auto d-block\" alt=\"dragao\" />\n      {setDisplayMode()}\n      {/* Botoes */}\n      <MDBRow center className='d-flex justify-content-center mb-4'>\n        <span onClick={goBackHandler} >\n          <MDBTooltip placement=\"bottom\">\n            <MDBBtn href=\"#\" gradient=\"blue\">\n              <MDBIcon icon=\"arrow-left\" size=\"2x\" />\n            </MDBBtn>\n            <div>Voltar</div>\n          </MDBTooltip>\n        </span>\n        {!isEdit && <span onClick={editDragonHandler}>\n          <MDBTooltip placement=\"bottom\">\n            <MDBBtn href=\"#\" gradient=\"purple\">\n              <MDBIcon icon=\"pen\" size=\"2x\" />\n            </MDBBtn>\n            <div> Editar Dragão</div>\n          </MDBTooltip>\n        </span>}\n        {isEdit && <span onClick={saveDragonHandler}>\n          <MDBTooltip placement=\"bottom\">\n            <MDBBtn href=\"#\" gradient=\"purple\">\n              <MDBIcon icon=\"save\" size=\"2x\" />\n            </MDBBtn>\n            <div>Salvar</div>\n          </MDBTooltip>\n        </span>}\n        {!isEdit && <span onClick={deleteDragonHandler}>\n          <MDBTooltip placement=\"bottom\">\n            <MDBBtn href=\"#\" color=\"danger\" outline>\n              <MDBIcon icon=\"trash-alt\" size=\"2x\" />\n            </MDBBtn>\n            <div>Escluir Dragão</div>\n          </MDBTooltip>\n        </span>}\n      </MDBRow>\n      <div>\n        {props.error && <p>{props.error}</p>}\n      </div>\n\n      <MDBRow center>\n        <FooterPage></FooterPage>\n      </MDBRow>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    successMessage: state.dragon.successMessage,\n    error: state.dragon.error,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveDragon: (dragonDetails) => dispatch(actions.saveDragon(dragonDetails)),\n    deleteDragon: (dragonId) => dispatch(actions.deleteDragon(dragonId))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditDragon);\n","C:\\dev\\desafio-dragon\\src\\components\\pages\\home\\home.js",["80","81"],"C:\\dev\\desafio-dragon\\src\\store\\actions\\actionTypes.js",[],"C:\\dev\\desafio-dragon\\src\\shared\\utility.js",[],"C:\\dev\\desafio-dragon\\src\\store\\actions\\index.js",[],"C:\\dev\\desafio-dragon\\src\\components\\pages\\add-dragon\\addDragon.js",[],"C:\\dev\\desafio-dragon\\src\\store\\actions\\auth.js",[],"C:\\dev\\desafio-dragon\\src\\store\\actions\\dragon-list.js",[],"C:\\dev\\desafio-dragon\\src\\store\\actions\\dragon.js",[],"C:\\dev\\desafio-dragon\\src\\history.js",[],"C:\\dev\\desafio-dragon\\src\\containers\\menu\\menu.js",[],"C:\\dev\\desafio-dragon\\src\\containers\\footer\\footer.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":20,"column":6,"nodeType":"88","endLine":20,"endColumn":8,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":26,"column":6,"nodeType":"88","endLine":26,"endColumn":18,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"97","line":52,"column":19,"nodeType":"98","endLine":56,"endColumn":20},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array. If 'setDragonDetails' needs the current value of 'props.location.state', you can also switch to useReducer instead of useState and read 'props.location.state' in the reducer.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["102"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [props.location.state]",{"range":"107","text":"108"},"Update the dependencies array to be: [props.history, wasDeleted]",{"range":"109","text":"110"},[673,675],"[props.location.state]",[762,774],"[props.history, wasDeleted]"]